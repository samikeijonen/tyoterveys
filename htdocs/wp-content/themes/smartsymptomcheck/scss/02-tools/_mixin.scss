@use "sass:math";
@use "sass:map";

@function strip-unit($number) {
    @if type-of($number) == "number" and not unitless($number) {
        @return math.div($number, $number * 0 + 1);
    }
    @return $number;
}

@mixin font-size($sizeValue: 1) {
    font-size: math.div($sizeValue, 16) * 1rem;
}

@mixin reset-list() {
    margin-left: 0;
    margin-right: 0;
    padding: 0;
    list-style: none;
}

@mixin reset-button-style() {
    appearance: none;
    padding: 0;
    border: 0;
    background: rgba(255, 255, 255, 0);
}

@mixin media($breakpoint) {
    @if map-has-key($breakpoints, $breakpoint) {
        @media (max-width: #{map.get($breakpoints, $breakpoint)}) {
            @content;
        }
    } @else {
        @warn "Unfortunately, no value could be retrieved from `#{$breakpoint}`. " + "Please make sure it is defined in `$breakpoints` map.";
    }
}

@mixin media-min($breakpoint) {
    @if map-has-key($breakpoints, $breakpoint) {
        @media (min-width: #{(map.get($breakpoints, $breakpoint) + 0.001)}) {
            @content;
        }
    } @else {
        @warn "Unfortunately, no value could be retrieved from `#{$breakpoint}`. " + "Please make sure it is defined in `$breakpoints` map.";
    }
}

@mixin object-fit($fit: cover, $position: center center) {
    object-fit: $fit;
    object-position: $position;
}
